package com.andersonzero0.appmusic.ui.theme
import androidx.compose.material3.MaterialTheme
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.setValue
import androidx.compose.ui.graphics.Color

var colorMusic by mutableStateOf(Color.Unspecified)

// Tema Claro
val primaryLight = Color(0xFF0D0D0D)
val onPrimaryLight = Color(0xFFF2F2F2)
val primaryContainerLight = Color(0xFFE0E0E0)
val onPrimaryContainerLight = Color(0xFF0D0D0D)
val secondaryLight = Color(0xFF4A4A4A)
val onSecondaryLight = Color(0xFFF2F2F2)
val secondaryContainerLight = Color(0xFFD9D9D9)
val onSecondaryContainerLight = Color(0xFF262626)
val tertiaryLight = Color(0xFF666666)
val onTertiaryLight = Color(0xFFF2F2F2)
val tertiaryContainerLight = Color(0xFFCCCCCC)
val onTertiaryContainerLight = Color(0xFF333333)
val errorLight = Color(0xFFBA1A1A)
val onErrorLight = Color(0xFFF2F2F2)
val errorContainerLight = Color(0xFFFFDAD6)
val onErrorContainerLight = Color(0xFF93000A)
val backgroundLight = Color(0xFFF2F2F2)
val onBackgroundLight = Color(0xFF0D0D0D)
val surfaceLight = Color(0xFFF2F2F2)
val onSurfaceLight = Color(0xFF0D0D0D)
val surfaceVariantLight = Color(0xFFE5E5E5)
val onSurfaceVariantLight = Color(0xFF404040)
val outlineLight = Color(0xFF737373)
val outlineVariantLight = Color(0xFFBFBFBF)
val scrimLight = Color(0xFF000000)
val inverseSurfaceLight = Color(0xFF2B2B2B)
val inverseOnSurfaceLight = Color(0xFFF2F2F2)
val inversePrimaryLight = Color(0xFFC4C4C4)
val surfaceDimLight = Color(0xFFD9D9D9)
val surfaceBrightLight = Color(0xFFF2F2F2)
val surfaceContainerLowestLight = Color(0xFFFFFFFF)
val surfaceContainerLowLight = Color(0xFFECECEC)
val surfaceContainerLight = Color(0xFFE6E6E6)
val surfaceContainerHighLight = Color(0xFFE0E0E0)
val surfaceContainerHighestLight = Color(0xFFDBDBDB)

// Tema Escuro
val primaryDark = Color(0xFFF2F2F2)
val onPrimaryDark = Color(0xFF0D0D0D)
val primaryContainerDark = Color(0xFF333333)
val onPrimaryContainerDark = Color(0xFFE0E0E0)
val secondaryDark = Color(0xFFB3B3B3)
val onSecondaryDark = Color(0xFF1F1F1F)
val secondaryContainerDark = Color(0xFF404040)
val onSecondaryContainerDark = Color(0xFFD9D9D9)
val tertiaryDark = Color(0xFFCCCCCC)
val onTertiaryDark = Color(0xFF2B2B2B)
val tertiaryContainerDark = Color(0xFF4D4D4D)
val onTertiaryContainerDark = Color(0xFFE5E5E5)
val errorDark = Color(0xFFFFB4AB)
val onErrorDark = Color(0xFF690005)
val errorContainerDark = Color(0xFF93000A)
val onErrorContainerDark = Color(0xFFFFDAD6)
val backgroundDark = Color(0xFF0D0D0D)
val onBackgroundDark = Color(0xFFF2F2F2)
val surfaceDark = Color(0xFF0D0D0D)
val onSurfaceDark = Color(0xFFF2F2F2)
val surfaceVariantDark = Color(0xFF404040)
val onSurfaceVariantDark = Color(0xFFBFBFBF)
val outlineDark = Color(0xFF8C8C8C)
val outlineVariantDark = Color(0xFF404040)
val scrimDark = Color(0xFF000000)
val inverseSurfaceDark = Color(0xFFF2F2F2)
val inverseOnSurfaceDark = Color(0xFF2B2B2B)
val inversePrimaryDark = Color(0xFF4D4D4D)
val surfaceDimDark = Color(0xFF0D0D0D)
val surfaceBrightDark = Color(0xFF363636)
val surfaceContainerLowestDark = Color(0xFF080808)
val surfaceContainerLowDark = Color(0xFF1A1A1A)
val surfaceContainerDark = Color(0xFF1F1F1F)
val surfaceContainerHighDark = Color(0xFF292929)
val surfaceContainerHighestDark = Color(0xFF343434)